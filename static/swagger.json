{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"VotingRoundResult": {
				"properties": {
					"roundId": {
						"type": "number",
						"format": "double"
					},
					"hash": {
						"type": "string"
					},
					"request": {},
					"response": {}
				},
				"required": [
					"roundId",
					"hash",
					"request",
					"response"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiDefaultResponseStatusEnum": {
				"type": "string",
				"enum": [
					"OK",
					"ERROR",
					"REQUEST_BODY_ERROR",
					"VALIDATION_ERROR",
					"TOO_MANY_REQUESTS",
					"UNAUTHORIZED",
					"AUTH_ERROR",
					"UPSTREAM_HTTP_ERROR",
					"INVALID_REQUEST",
					"NOT_IMPLEMENTED",
					"PENDING"
				],
				"description": "All possible values of status."
			},
			"ApiValidationErrorDetails": {
				"properties": {
					"className": {
						"type": "string"
					},
					"fieldErrors": {
						"properties": {},
						"additionalProperties": {
							"type": "string"
						},
						"type": "object"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_VotingRoundResult-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/VotingRoundResult"
						},
						"type": "array"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VotingRoundRequest": {
				"properties": {
					"roundId": {
						"type": "number",
						"format": "double"
					},
					"requestBytes": {
						"type": "string"
					},
					"verificationStatus": {
						"type": "string"
					},
					"attestationStatus": {
						"type": "string"
					},
					"exceptionError": {
						"type": "string"
					}
				},
				"required": [
					"roundId",
					"requestBytes",
					"verificationStatus"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_VotingRoundRequest-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/VotingRoundRequest"
						},
						"type": "array"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SystemStatus": {
				"properties": {
					"currentBufferNumber": {
						"type": "number",
						"format": "double"
					},
					"latestAvailableRoundId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"currentBufferNumber",
					"latestAvailableRoundId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_SystemStatus_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/SystemStatus"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AlertsStatus": {
				"properties": {
					"status": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"timeLate": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"status",
					"state",
					"comment",
					"name",
					"timeLate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PerformanceStatus": {
				"properties": {
					"valueName": {
						"type": "string"
					},
					"valueUnit": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"value": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"valueName",
					"valueUnit",
					"comment",
					"name",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceStatus": {
				"properties": {
					"alerts": {
						"items": {
							"$ref": "#/components/schemas/AlertsStatus"
						},
						"type": "array"
					},
					"perf": {
						"items": {
							"$ref": "#/components/schemas/PerformanceStatus"
						},
						"type": "array"
					}
				},
				"required": [
					"alerts",
					"perf"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ApiResponse_ServiceStatus_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/ServiceStatus"
					},
					"errorDetails": {
						"type": "string",
						"description": "Optional details for unexpected error responses."
					},
					"errorMessage": {
						"type": "string",
						"description": "Simple message to explain client developers the reason for error."
					},
					"status": {
						"$ref": "#/components/schemas/ApiDefaultResponseStatusEnum",
						"description": "Response status. OK for successful reponses."
					},
					"validationErrorDetails": {
						"$ref": "#/components/schemas/ApiValidationErrorDetails"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "flare-price-provider",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "flare"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/proof/votes-for-round/{roundId}": {
			"get": {
				"operationId": "VotesForRound",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_VotingRoundResult-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Proof"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roundId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/proof/requests-for-round/{roundId}": {
			"get": {
				"operationId": "RequestsForRound",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_VotingRoundRequest-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Proof"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roundId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/proof/status": {
			"get": {
				"operationId": "SystemStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_SystemStatus_"
								}
							}
						}
					}
				},
				"tags": [
					"Proof"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/status/services": {
			"get": {
				"operationId": "ServiceStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ApiResponse_ServiceStatus_"
								}
							}
						}
					}
				},
				"tags": [
					"Status"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/status/services-html": {
			"get": {
				"operationId": "ServiceStatusHtml",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Status"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}